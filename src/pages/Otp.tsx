import React, { useState, useRef } from "react";
import Button from "../components/Button";
import Alert from "../components/Alert";
import { useNavigate } from "react-router-dom";

function OTPInputField({
  value,
  onChange,
  index,
  refCallback,
}: {
  value: string;
  onChange: (newValue: string, index: number) => void;
  index: number;
  refCallback: (element: HTMLInputElement | null, index: number) => void;
}) {
  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    onChange(e.target.value, index);
  };

  return (
    <input
      ref={(el) => refCallback(el, index)}
      type="text"
      maxLength={1}
      value={value}
      onChange={handleInputChange}
      className="w-10 h-10 lg:w-14 lg:h-14 text-3xl border-2 border-green-700 mx-1 text-center rounded-md "
    />
  );
}

export default function Otp() {
  const navigate = useNavigate();
  const [otp, setOtp] = useState(["", "", "", "", "", ""]);
  const [requestStatus, setRequestStatus] = useState<{
    status: "failure" | "success" | null;
    message: string;
  }>({
    status: null,
    message: "",
  });
  const inputRefs = useRef<(HTMLInputElement | null)[]>([]);

  const handleInputChange = (newValue: string, index: number) => {
    const newOtp = [...otp];
    newOtp[index] = newValue;
    setOtp(newOtp);

    if (newValue === "" && index > 0) {
      inputRefs.current[index - 1]?.focus();
    } else if (index < 5 && newValue !== "") {
      inputRefs.current[index + 1]?.focus();
    }
  };

  const refCallback = (el: HTMLInputElement | null, index: number) => {
    inputRefs.current[index] = el;
  };

  const handleButtonClick = async () => {
    const otpValue = otp.join("");
    const response = await fetch(
      `http://localhost:3000/api/auth/otp/validate`,
      {
        method: "POST",
        credentials: "include",
        headers: { "content-type": "application/json" },
        body: JSON.stringify({
          otpValue,
        }),
      }
    );
    const json = await response.json();
    if (json.status != 200) {
      setRequestStatus({ status: "failure", message: json.message });
      return;
    }
    navigate("/");
  };

  return (
    <>
      <div className="h-[100vh] flex flex-col justify-center items-center gap-10">
        <h2 className="text-center text-xl md:text-2xl lg:text-4xl">
          please enter the One Time Password(OTP)
          <br />
          generated by your Microsoft Authenticator App
        </h2>
        <div className="flex flex-wrap gap-2 items-center justify-center">
          {otp.map((digit, index) => (
            <OTPInputField
              key={index}
              value={digit}
              onChange={handleInputChange}
              index={index}
              refCallback={refCallback}
            />
          ))}
        </div>
        <Button type="primary" attributes={{ onClick: handleButtonClick }}>
          Submit
        </Button>
        {requestStatus.status === "failure" && (
          <Alert
            message={requestStatus.message}
            status={requestStatus.status}
          />
        )}
      </div>
    </>
  );
}
